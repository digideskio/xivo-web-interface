<?php
#
# Copyright (C) 2014  Avencall
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

xivo_service_asterisk::required(array('abstract','abstract.inc'),true);

class xivo_service_asterisk_func_key_mapping extends xivo_service_asterisk_abstract
{
	var $_dso			= null;
	var $_name			= 'func_key_mapping';
	var $_filter		= false;
	var $_origin		= false;
	var $_origin_list	= false;
	var $_type_list		= false;

	public function __construct(&$sre,&$dso)
	{
		if(is_object($sre) === false)
			trigger_error('Invalid service in '.__CLASS__,E_USER_ERROR);

		if(is_object($dso) === false)
			trigger_error('Invalid datastorage in '.__CLASS__,E_USER_ERROR);

		$this->_sre = &$sre;
		$this->_dso = &$dso;

		$this->_load_config();
	}

	function _prepare($data)
	{
		$data['template_id'] = (int) $data['template_id'];
		$data['func_key_id'] = (int) $data['func_key_id'];
		$data['destination_type_id'] = (int) $data['destination_type_id'];
		$data['position'] = (int) $data['position'];
		$data['blf'] = dwho_bool($data['blf']);
		$data['label'] = (string) $data['label'];
		return($data);
	}

	private function _clean_values($data) {
		if( trim((string)$data['label']) == '' ) {
			$data['label'] = null;
		}
	}

	function add($data)
	{
		$this->_clean_values($data);
		return parent::add($data);
	}

	function edit($data)
	{
		$this->_clean_values($data);
		return parent::edit($data);
	}
}

?>
